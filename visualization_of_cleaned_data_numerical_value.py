# -*- coding: utf-8 -*-
"""visualization_of_cleaned_data_numerical_value.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1adG-OOJH14P7fDI_g0akiyPEj8_z-XyD
"""

import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import pandas as pd

file_path = 'customer_stat_cleaned.csv'
data = pd.read_csv(file_path)
# Create a figure
fig = plt.figure(figsize=(10, 6))
gs = gridspec.GridSpec(2, 1, height_ratios=[3, 1])
ax0 = plt.subplot(gs[0])
ax1 = plt.subplot(gs[1])

# Plot the main histogram for Transaction Count Distribution up to 200
main_data = data[data['Transaction_Count'] <= 200]
ax0.hist(main_data['Transaction_Count'], bins=20, color='red', edgecolor='black')
ax0.set_title('Transaction Count Distribution')
ax0.set_xlabel('Transaction Count')
ax0.set_ylabel('Number of Customers')

# Plot the inset histogram for the remaining data
inset_data = data[data['Transaction_Count'] > 200]
ax1.hist(inset_data['Transaction_Count'], bins=20, color='red', edgecolor='black')
ax1.set_xlim(200, max(data['Transaction_Count']))
ax1.set_xlabel('Transaction Count')
ax1.set_ylabel('Number of Customers')

plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Tenure'], bins=20, color='lightgreen', edgecolor='black')
plt.title('Tenure Distribution')
plt.xlabel('Tenure')
plt.ylabel('Number of Customers')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Days_Since_Last_Transaction'], bins=20, color='salmon', edgecolor='black')
plt.title('Days Since Last Transaction Distribution')
plt.xlabel('Days Since Last Transaction')
plt.ylabel('Number of Customers')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Average_Spending'], bins=20, color='gold', edgecolor='black')
plt.title('Average Spending Distribution')
plt.xlabel('Average Spending')
plt.ylabel('Number of Customers')
plt.show()

# Calculating min, max, and median for the specified columns in the customer stat cleaned data
stats = {
    'Transaction_Count': {
        'min': data['Transaction_Count'].min(),
        'max': data['Transaction_Count'].max(),
        'median': data['Transaction_Count'].median()
    },
    'Days_Since_Last_Transaction': {
        'min': data['Days_Since_Last_Transaction'].min(),
        'max': data['Days_Since_Last_Transaction'].max(),
        'median': data['Days_Since_Last_Transaction'].median()
    },
    'Average_Spending': {
        'min': data['Average_Spending'].min(),
        'max': data['Average_Spending'].max(),
        'median': data['Average_Spending'].median()
    },
    'Tenure': {
        'min': data['Tenure'].min(),
        'max': data['Tenure'].max(),
        'median': data['Tenure'].median()
    }
}

stats_df = pd.DataFrame(stats).T
stats_df